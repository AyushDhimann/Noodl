

--- lib\constants\colors.dart ---

import "package:flutter/material.dart"; 

Color bgColor = const Color(0xff050308);

// Color purple = const Color(0xff6247AA);
Color black = const Color(0xff000000);
Color primary = const Color(0xffB199E1);
Color secondary = const Color(0xff401C88);
Color accent = const Color(0xff7137E6);
Color grey =  const Color.fromARGB(255, 40, 40, 40);
Color green = const Color.fromARGB(255, 2, 114, 20);
Color red =  const Color.fromARGB(255, 255, 17, 0);


Color white =  Color(0xffE8E4F1);

--- lib\main.dart ---

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:frontend/pages/home.dart';
import 'package:frontend/pages/login.dart';
import 'package:frontend/pages/onboarding_page.dart';
import 'package:frontend/providers/metamask_provider.dart';
import 'package:frontend/providers/quiz_page_provider.dart';
import 'package:provider/provider.dart';

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle.light);
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (context) => QuizPageProvider()),
        ChangeNotifierProvider(create: (context) => MetaMaskProvider()),
      ],
      child: MaterialApp(
        debugShowCheckedModeBanner: false,
        theme: ThemeData.dark(useMaterial3: true),
        home: Consumer<MetaMaskProvider>(
          builder: (context, provider, child) {
            if (provider.isConnected && provider.isOnboardingComplete) {
              return const HomePage();
            } else if (provider.isConnected && !provider.isOnboardingComplete) {
              return const OnboardingPage();
            } else {
              return const LoginPage();
            }
          },
        ),
      ),
    );
  }
}

--- lib\models\models.dart ---

// ignore_for_file: non_constant_identifier_names

class LearningPathModel{
  final String description;
  final int id;
  final String title;
  final int total_levels;

  LearningPathModel({
    required this.description,
    required this.id,
    required this.title,
    required this.total_levels
  });
  
}

class QuizSlideModel{
  final String content;
  final int id;
  final int item_index;
  final String item_type;

  QuizSlideModel({
    required this.content,
    required this.id,
    required this.item_index,
    required this.item_type
  });
  
}

class QuizQNASubmodel{
  final String question;
  final List<String> options;
  final int correct_index;
  final String explaination;

  QuizQNASubmodel({
    required this.question,
    required this.options,
    required this.correct_index,
    required this.explaination
  });

}

class QuizQNAMainModel{
  final QuizQNASubmodel content;
  final int id;
  final int item_index;
  final String item_type;

  QuizQNAMainModel({
    required this.content,
    required this.id,
    required this.item_index,
    required this.item_type
  });
  
}



--- lib\pages\components\duk.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/providers/quiz_page_provider.dart';
import 'package:provider/provider.dart';

class DidYouKnowScreen extends StatelessWidget {
  const DidYouKnowScreen({super.key});

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Align(
      alignment: Alignment.topCenter,
      child: UnconstrainedBox(
        child: Container(
          padding: const EdgeInsets.all(12),
          margin: const EdgeInsets.symmetric(vertical: 36),
          width: size.width-36,
          decoration: BoxDecoration(
            color: appColors.primary.withOpacity(0.25),
            borderRadius: const BorderRadius.all(Radius.circular(12.5))
          ),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'üí° Did You Know?',
                style: TextStyle(
                  color: appColors.white,
                  fontSize: 20,
                  fontFamily: 'NSansB'
                ),
              ),
              SizedBox(height: 5,),
              Text(
                'India was the first country to nationalize its banks in 1969, bringing 14 major private banks under government control to ensure financial inclusion and rural development.',
                style: TextStyle(
                  color: appColors.white,
                  fontSize: 18,
                  fontFamily: 'NSansm'
                ),
              ),
              const SizedBox(height: 5,),
              Text(
                'üìà This move drastically increased the number of bank branches in rural areas and played a major role in improving access to credit across the country.',
                style: TextStyle(
                  color: appColors.white,
                  fontSize: 18,
                  fontFamily: 'NSansL'
                ),
              ),
              const SizedBox(height: 10,),
              Center(
                child: Consumer<QuizPageProvider>(
                  builder: (context, provider, child) => 
                  Material(
                    borderRadius: const BorderRadius.all(Radius.circular(25)),
                    color: appColors.white,
                    child: InkWell(
                      onTap: ()=>provider.goToNextQues(),
                      splashColor: Colors.black12,
                      borderRadius: const BorderRadius.all(Radius.circular(25)),
                      child: Container(
                        width: 50,
                        height: 50,
                        alignment: Alignment.center,
                        child: Icon(
                          CupertinoIcons.chevron_forward,
                          color: appColors.black,
                        ),
                      ),
                    ),
                  ),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }
}

--- lib\pages\components\quiz_screen.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/widgets/quiz/quiz_options.dart';
import 'package:frontend/widgets/quiz/quiz_question.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class QuizScreen extends StatelessWidget {
  const QuizScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisSize: MainAxisSize.min,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const QuizQuestion(text: 'What is the full form of UPI, a widely used digital payment system in India?',),
        Padding(
          padding: const EdgeInsets.fromLTRB(12, 0, 12, 8),
          child: Text(
            'Select one',
            style: TextStyle(
              fontFamily: 'NSansM',
              color: appColors.white.withOpacity(0.5)
            ),
          ),
        ),
        const QuizOptions(),
      ],
    );
  }
}

--- lib\pages\home.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/widgets/common/topbar.dart';
import 'package:frontend/widgets/home/empty_your_noodls.dart';
import 'package:frontend/widgets/home/generate_noodl_button.dart';
import 'package:frontend/widgets/home/heading_widget.dart';
import 'package:frontend/widgets/home/noodl_button.dart';

class HomePage extends StatelessWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    EdgeInsets dp = MediaQuery.of(context).padding;
    return Scaffold(
      backgroundColor: appColors.bgColor,
      body: Stack(
        children: [
          SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                SizedBox(height: dp.top + 60,),
                // remove this
                SizedBox(height: 12,),
                Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 12),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      HeadingWidget(
                          heading: 'Your Noodls',
                          subHeading: 'Your learning paths appear here.'
                      ),
                      EmptyYourNoodls(),
                      SizedBox(height: 12,),
                      GenerateNoodlButton(),
                      HeadingWidget(
                          heading: 'Community Noodls',
                          subHeading: 'Community Noodls refer to popular learning paths previously generated by other users.'
                      ),
                      NoodlButton(
                        title: 'üöó Driving License in India',
                        description: "A user-generated learning path about Driving License in India.",
                      ),
                      NoodlButton(
                        title: 'ü•Æ How to bake a chocolate chip cake without oven?',
                        description: "A user-generated learning path about how to bake a chocolate chip cake without oven?.",
                      ),
                      NoodlButton(
                        title: 'üèÅ Things to consider before going to n√ºrburgring track.',
                        description: "A user-generated learning path about Things to consider before going to n√ºrburgring track..",
                      ),
                      NoodlButton(
                        title: 'üå± How is Photosynthesis done?',
                        description: "A user-generated learning path about How is Photosynthesis done?.",
                      ),
                      NoodlButton(
                        title: 'üèéÔ∏è Things to consider before going to nordschleife track.',
                        description: "A user-generated learning path about Things to consider before going to nordschleife track..",
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
          Topbar()
        ],
      ),
    );
  }
}

--- lib\pages\login.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/providers/metamask_provider.dart';
import 'package:provider/provider.dart';

// Convert to StatefulWidget to listen for app lifecycle changes
class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> with WidgetsBindingObserver {

  @override
  void initState() {
    super.initState();
    // Register this class as an observer
    WidgetsBinding.instance.addObserver(this);
  }

  @override
  void dispose() {
    // Don't forget to remove the observer
    WidgetsBinding.instance.removeObserver(this);
    super.dispose();
  }

  /// This method is called when the app's lifecycle state changes.
  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    super.didChangeAppLifecycleState(state);
    // When the app returns to the foreground, trigger a rebuild.
    if (state == AppLifecycleState.resumed) {
      // This setState call is crucial. It tells Flutter to redraw the widget.
      // When it redraws, the Consumer in main.dart will re-evaluate the
      // provider's state and navigate to the correct screen if connected.
      setState(() {});
    }
  }

  @override
  Widget build(BuildContext context) {
    EdgeInsets dp = MediaQuery.of(context).padding;
    Size size = MediaQuery.of(context).size;

    // We can use context.read here as we are just calling a method
    final metaMaskProvider = context.read<MetaMaskProvider>();

    return Scaffold(
      backgroundColor: appColors.bgColor,
      body: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 12),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            SizedBox(height: dp.top+24,),
            Center(child: SvgPicture.asset('assets/images/noodl.svg', width: size.width/3,)),
            const SizedBox(height: 36,),
            Expanded(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'üçú Welcome to noodl.',
                      style: TextStyle(
                          fontFamily: 'NSansB',
                          fontSize: 22,
                          color: appColors.white
                      ),
                    ),
                    Text(
                      'Learn anything and everything the smart way ‚Äî through short bursts, fun quizzes, and real rewards.',
                      style: TextStyle(
                          fontFamily: 'NSansL',
                          fontSize: 18,
                          color: appColors.white
                      ),
                    ),
                    const SizedBox(height: 20,),
                    Text(
                      'üß† Powered by Web3',
                      style: TextStyle(
                          fontFamily: 'NSansB',
                          fontSize: 22,
                          color: appColors.white
                      ),
                    ),
                    Text(
                      'Noodl uses secure blockchain technology to give you true ownership of your progress, achievements, and rewards.',
                      style: TextStyle(
                          fontFamily: 'NSansL',
                          fontSize: 18,
                          color: appColors.white
                      ),
                    ),
                    const SizedBox(height: 20,),
                    Text(
                      'ü¶ä Sign in with MetaMask',
                      style: TextStyle(
                          fontFamily: 'NSansB',
                          fontSize: 22,
                          color: appColors.white
                      ),
                    ),
                    Text(
                      'To keep your data safe and your learning profile truly yours, we use MetaMask ‚Äî a trusted Web3 wallet that lets you sign in without passwords.\nüéØ No emails. No third parties. Just you and your wallet.',
                      style: TextStyle(
                          fontFamily: 'NSansL',
                          fontSize: 18,
                          color: appColors.white
                      ),
                    ),
                  ],
                )
            ),
            Center(
              child: Material(
                borderRadius: const BorderRadius.all(Radius.circular(12.5)),
                color: appColors.white,
                child: InkWell(
                  splashColor: Colors.black12,
                  borderRadius: const BorderRadius.all(Radius.circular(12.5)),
                  onTap: () => metaMaskProvider.connect(),
                  child: Container(
                    height: 50,
                    width: size.width-24,
                    padding: const EdgeInsets.symmetric(horizontal: 12),
                    child:  Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        SvgPicture.asset('assets/images/metamask.svg', height: 25,),
                        Text(
                          'Continue with MetaMask',
                          style: TextStyle(
                              color: appColors.black,
                              fontSize: 16,
                              fontFamily: 'NSansM'
                          ),
                        ),
                        SizedBox(
                          width: 25,
                          child: Icon(
                            CupertinoIcons.arrow_right,
                            color: appColors.black,
                          ),
                        )
                      ],
                    ),
                  ),
                ),
              ),
            ),
            SizedBox(
              height: dp.bottom+12,
            )
          ],
        ),
      ),
    );
  }
}

--- lib\pages\onboarding_page.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/providers/metamask_provider.dart';
import 'package:provider/provider.dart';

class OnboardingPage extends StatefulWidget {
  const OnboardingPage({super.key});

  @override
  State<OnboardingPage> createState() => _OnboardingPageState();
}

class _OnboardingPageState extends State<OnboardingPage> {
  final _nameController = TextEditingController();
  final _countryController = TextEditingController();
  final _formKey = GlobalKey<FormState>();
  bool _isLoading = false;

  Future<void> _submit() async {
    if (_formKey.currentState!.validate()) {
      setState(() {
        _isLoading = true;
      });

      final provider = context.read<MetaMaskProvider>();
      await provider.completeOnboarding(
        _nameController.text,
        _countryController.text,
      );

      // No need to set isLoading to false, as the widget tree will rebuild
      // and this page will be replaced by the HomePage.
    }
  }

  @override
  void dispose() {
    _nameController.dispose();
    _countryController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    EdgeInsets dp = MediaQuery.of(context).padding;
    Size size = MediaQuery.of(context).size;

    return Scaffold(
      backgroundColor: appColors.bgColor,
      body: Center(
        child: SingleChildScrollView(
          padding: const EdgeInsets.symmetric(horizontal: 24),
          child: Form(
            key: _formKey,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'üëã One last step...',
                  style: TextStyle(
                      fontFamily: 'NSansB', fontSize: 28, color: appColors.white),
                ),
                const SizedBox(height: 8),
                Text(
                  'Please tell us a bit about yourself to complete your profile.',
                  style: TextStyle(
                      fontFamily: 'NSansL', fontSize: 18, color: appColors.white.withOpacity(0.8)),
                ),
                const SizedBox(height: 40),
                TextFormField(
                  controller: _nameController,
                  style: TextStyle(color: appColors.white, fontFamily: 'NSansM'),
                  decoration: _inputDecoration('Your Name'),
                  validator: (value) =>
                  value == null || value.isEmpty ? 'Please enter your name' : null,
                ),
                const SizedBox(height: 20),
                TextFormField(
                  controller: _countryController,
                  style: TextStyle(color: appColors.white, fontFamily: 'NSansM'),
                  decoration: _inputDecoration('Your Country'),
                  validator: (value) =>
                  value == null || value.isEmpty ? 'Please enter your country' : null,
                ),
                const SizedBox(height: 40),
                _isLoading
                    ? Center(child: CircularProgressIndicator(color: appColors.primary))
                    : Material(
                  borderRadius: const BorderRadius.all(Radius.circular(12.5)),
                  color: appColors.primary,
                  child: InkWell(
                    onTap: _submit,
                    borderRadius: const BorderRadius.all(Radius.circular(12.5)),
                    child: Container(
                      height: 50,
                      width: size.width - 48,
                      alignment: Alignment.center,
                      child: Text(
                        'Complete Profile & Continue',
                        style: TextStyle(
                            color: appColors.black, fontSize: 16, fontFamily: 'NSansB'),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  InputDecoration _inputDecoration(String label) {
    return InputDecoration(
      labelText: label,
      labelStyle: TextStyle(color: appColors.white.withOpacity(0.5)),
      filled: true,
      fillColor: appColors.grey,
      border: OutlineInputBorder(
        borderRadius: BorderRadius.circular(12.5),
        borderSide: BorderSide.none,
      ),
      focusedBorder: OutlineInputBorder(
        borderRadius: BorderRadius.circular(12.5),
        borderSide: BorderSide(color: appColors.primary, width: 2),
      ),
    );
  }
}

--- lib\pages\quiz.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/pages/components/duk.dart';
import 'package:frontend/pages/components/quiz_screen.dart';
import 'package:frontend/providers/quiz_page_provider.dart';
import 'package:frontend/widgets/quiz/info_dialog.dart';
import 'package:frontend/widgets/quiz/quiz_appbar.dart';
// ignore: library_prefixes
import 'package:frontend/constants/colors.dart' as appColors;
// import 'package:frontend/widgets/quiz/quiz_options.dart';
// import 'package:frontend/widgets/quiz/quiz_question.dart';
import 'package:frontend/widgets/quiz/quiz_submit_button.dart';
import 'package:provider/provider.dart';

class QuizPage extends StatelessWidget {
  const QuizPage({super.key});

  @override
  Widget build(BuildContext context) {
    // ignore: unused_local_variable
    Size size = MediaQuery.of(context).size;
    EdgeInsets dp = MediaQuery.of(context).padding;
    // ignore: prefer_const_constructors
    return Scaffold(
      backgroundColor: appColors.bgColor,
      body:  Consumer<QuizPageProvider>(
        builder: (context, provider, child) => 
        
        Stack(
          children: [
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const QuizAppBar(),
                SizedBox(
                  height: 2,
                  child: LinearProgressIndicator(
                    value: provider.progress/8,
                    color: appColors.accent,
                  ),
                ),
                SizedBox(
                  width: size.width,
                  height: size.height - dp.top -70 -2,
                  child: PageView(
                    controller: provider.quizQuesContoller,
                    children: const [
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                      DidYouKnowScreen(),
                      QuizScreen(),
                    ],
                  ),
                )
              ],
            ),
            Column(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                Consumer<QuizPageProvider>(
                  builder: (ccontext, provider, child) => 
                    QuizSubmitButton(
                      "Submit",
                      isActive: provider.selectedOption!=0,
                      onTap: ()=>showInfoDialog(context),
                  )
                ),
              ],
            )
          ],
        ),
      ),
    );
  }
}

--- lib\providers\metamask_provider.dart ---

import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';
import 'package:url_launcher/url_launcher_string.dart';
import 'package:walletconnect_flutter_v2/walletconnect_flutter_v2.dart';

class MetaMaskProvider extends ChangeNotifier {
  // --- STATE --- //
  Web3App? _web3app;
  SessionData? _session;
  String? _account;
  bool _isConnected = false;
  bool _onboardingComplete = false;

  // --- GETTERS --- //
  String? get walletAddress => _account;
  bool get isConnected => _isConnected;
  bool get isOnboardingComplete => _onboardingComplete;

  // --- CONSTRUCTOR --- //
  MetaMaskProvider() {
    _init();
  }

  // --- INITIALIZATION --- //
  Future<void> _init() async {
    final prefs = await SharedPreferences.getInstance();

    _web3app = await Web3App.createInstance(
      projectId: '3b68b1320c7b316633e1aed418ef13f8',
      metadata: const PairingMetadata(
        name: 'Noodl',
        description: 'Learn anything and everything the smart way.',
        url: 'https://noodl.app',
        icons: ['https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/2048px-MetaMask_Fox.svg.png'],
        redirect: Redirect(
            native: 'noodlapp://',
            universal: 'https://noodl.app'
        ),
      ),
    );

    _web3app!.onSessionConnect.subscribe(_onSessionConnect);
    _web3app!.onSessionDelete.subscribe(_onSessionDelete);

    if (_web3app!.sessions.getAll().isNotEmpty) {
      _session = _web3app!.sessions.getAll().first;
      if (_session != null) {
        _account = NamespaceUtils.getAccount(
          _session!.namespaces.values.first.accounts.first,
        );
        _isConnected = true;
        _onboardingComplete = prefs.getBool('onboardingComplete_${_account}') ?? false;
        notifyListeners();
      }
    }
  }

  // --- WALLETCONNECT EVENT HANDLERS --- //
  void _onSessionConnect(SessionConnect? args) async {
    if (args != null) {
      final prefs = await SharedPreferences.getInstance();
      _session = args.session;
      _account = NamespaceUtils.getAccount(
        _session!.namespaces.values.first.accounts.first,
      );
      _isConnected = true;
      _onboardingComplete = prefs.getBool('onboardingComplete_${_account}') ?? false;
      notifyListeners();
    }
  }

  void _onSessionDelete(SessionDelete? args) {
    _clearSession();
  }

  // --- PUBLIC METHODS --- //
  Future<void> connect() async {
    if (_web3app == null) return;
    try {
      final ConnectResponse response = await _web3app!.connect(
        requiredNamespaces: {
          'eip155': const RequiredNamespace(
            chains: ['eip155:1'],
            methods: ['personal_sign'],
            events: ['chainChanged', 'accountsChanged'],
          ),
        },
      );
      await launchUrlString(response.uri.toString(), mode: LaunchMode.externalApplication);
    } catch (e) {
      debugPrint('Error connecting: $e');
    }
  }

  Future<void> completeOnboarding(String name, String country) async {
    if (_account == null || _session == null) return;
    final url = Uri.parse('http://1725364.xyz:2000/login');
    try {
      final response = await http.post(
        url,
        headers: {'Content-Type': 'application/json'},
        body: json.encode({
          'wallet_address': _account,
          'chain_id': _session!.namespaces['eip155']!.chains?.first,
          'name': name,
          'country': country,
        }),
      );
      if (response.statusCode == 200) {
        final prefs = await SharedPreferences.getInstance();
        await prefs.setBool('onboardingComplete_${_account!}', true);
        _onboardingComplete = true;
        notifyListeners();
      } else {
        debugPrint('Server error: ${response.statusCode} - ${response.body}');
      }
    } catch (e) {
      debugPrint('Failed to send onboarding data: $e');
    }
  }

  Future<void> disconnect() async {
    if (_session != null) {
      await _web3app!.disconnectSession(
        topic: _session!.topic,
        reason: const WalletConnectError(code: 1, message: 'User disconnected'),
      );
      _clearSession();
    }
  }

  // --- PRIVATE HELPERS --- //
  void _clearSession() async {
    final prefs = await SharedPreferences.getInstance();
    if (_account != null) {
      await prefs.remove('onboardingComplete_${_account!}');
    }
    _session = null;
    _account = null;
    _isConnected = false;
    _onboardingComplete = false;
    notifyListeners();
  }

  @override
  void dispose() {
    _web3app?.onSessionConnect.unsubscribe(_onSessionConnect);
    _web3app?.onSessionDelete.unsubscribe(_onSessionDelete);
    super.dispose();
  }
}

--- lib\providers\quiz_page_provider.dart ---

import 'package:flutter/material.dart';

class QuizPageProvider extends ChangeNotifier{
  int selectedOption=0;
  int progress = 0;
  void changeSelectedOption(int newOption){
    selectedOption = newOption;
    notifyListeners();
  }

  PageController quizQuesContoller = PageController();

  void goToNextQues(){
    quizQuesContoller.nextPage(
      duration: const Duration(milliseconds: 500),
      curve: Curves.linearToEaseOut
    );
    progress += 1;
    selectedOption = 0;
    notifyListeners();
  }

}

--- lib\services\authentication.dart ---



--- lib\services\services.dart ---

import 'dart:convert';

import 'package:http/http.dart' as http;

class APIservice{

  static Future<dynamic> getPaths() async{
    Uri url = Uri.parse('http://1725364.xyz:5000/paths');

    final response = await http.get(url);

    print(response.statusCode);
    print(response.body);
    return jsonDecode(response.body);
  }

  static Future<dynamic> getLevel(int learningPathID, int level) async{
    Uri url = Uri.parse('http://1725364.xyz:5000/paths/$learningPathID/levels/$level');

    final response = await http.get(url);

    print(response.statusCode);
    print(response.body);
    return jsonDecode(response.body);
  }
}

--- lib\widgets\common\topbar.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/providers/metamask_provider.dart';
import 'package:provider/provider.dart';

class Topbar extends StatelessWidget {
  const Topbar({super.key});

  @override
  Widget build(BuildContext context) {
    EdgeInsets dp = MediaQuery.of(context).padding;
    final metaMaskProvider = Provider.of<MetaMaskProvider>(context, listen: false);

    return Container(
      padding: EdgeInsets.fromLTRB(12, dp.top, 12, 0),
      height: 60+dp.top,
      decoration: BoxDecoration(
          color: appColors.bgColor.withOpacity(0.85),
          border: Border(bottom: BorderSide(width: 1.5, color: appColors.primary.withOpacity(0.5)))
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          SvgPicture.asset('assets/images/noodl_alt.svg', height: 30,),
          PopupMenuButton<String>(
            onSelected: (value) {
              if (value == 'disconnect') {
                metaMaskProvider.disconnect();
              }
            },
            color: appColors.grey,
            icon: Icon(CupertinoIcons.line_horizontal_3, color: appColors.white),
            itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
              PopupMenuItem<String>(
                value: 'wallet',
                child: Text(
                  'Wallet: ${metaMaskProvider.walletAddress?.substring(0, 6)}...${metaMaskProvider.walletAddress?.substring(metaMaskProvider.walletAddress!.length - 4)}',
                  style: TextStyle(fontFamily: 'NSansM', color: appColors.white),
                ),
                enabled: false, // Make it not clickable
              ),
              const PopupMenuDivider(),
              PopupMenuItem<String>(
                value: 'disconnect',
                child: Text(
                  'Disconnect',
                  style: TextStyle(fontFamily: 'NSansM', color: appColors.red),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

--- lib\widgets\home\empty_your_noodls.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class EmptyYourNoodls extends StatelessWidget {
  const EmptyYourNoodls({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Container(
        height: 150,
        width: 200,
        alignment: Alignment.center,
        child: Text(
          'No noodls yet! Start by generating one or picking from the community..',
          textAlign: TextAlign.center,
          style: TextStyle(
            color: appColors.white.withOpacity(0.35),
            fontFamily: 'NSansM',
            fontSize: 15,
          ),
        ),
      ),
    );
  }
}

--- lib\widgets\home\generate_noodl_button.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class GenerateNoodlButton extends StatelessWidget {
  const GenerateNoodlButton({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.all(12),
      margin: EdgeInsets.only(bottom: 12),
      decoration: BoxDecoration(
        color: appColors.primary.withOpacity(1),
        borderRadius: BorderRadius.all(Radius.circular(12.5))
      ),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.start,
            children: [
              Icon(
                CupertinoIcons.wand_stars,
                color: appColors.black,
              ),
              SizedBox(width: 10,),
              Text(
                'Generate a Noodl',
                style: TextStyle(
                  fontFamily: 'NSansB',
                  fontSize: 22, 
                  color: appColors.black
                ),
              ),
            ],
          ),
          SizedBox(height: 8,),
          Text(
            'Generate a learning path of your choice with AI and earn an NFT-based certificate upon completing a Noodl.',
            style: TextStyle(
              fontFamily: 'NSansL',
              color: appColors.black,
              fontSize: 14
            ),
          ),
          SizedBox(height: 8,),
          Align(
            alignment: Alignment.centerRight,
            child: Material(
              borderRadius: BorderRadius.all(Radius.circular(100)),
              color: appColors.black.withOpacity(0.1),
              child: InkWell(
                borderRadius: BorderRadius.all(Radius.circular(100)),
                splashColor: appColors.white.withOpacity(0.5),
                onTap: () {
                },
                child: Container(
                  padding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        'Get started',
                        style: TextStyle(
                          fontFamily: 'NSansM',
                          fontSize: 16, 
                          color: appColors.black
                        ),
                      ),
                      SizedBox(width: 5,),
                      Icon(
                        CupertinoIcons.arrow_right,
                        color: appColors.black,
                        size: 18,
                      )
                    ],
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

--- lib\widgets\home\heading_widget.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class HeadingWidget extends StatelessWidget {
  final String heading;
  final String subHeading;
  const HeadingWidget({super.key, required this.heading, required this.subHeading});

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisSize: MainAxisSize.min,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          heading,
          style: TextStyle(
            color: appColors.white,
            fontFamily: 'NSansB',
            fontSize: 22
          ),
        ),
        SizedBox(height: 5,),
        Text(
          subHeading,
          style: TextStyle(
            color: appColors.white.withOpacity(0.5),
            fontFamily: 'NSansM',
            fontSize: 12
          ),
        ),
        SizedBox(height: 12,),
      ],
    );
  }
}

--- lib\widgets\home\noodl_button.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class NoodlButton extends StatelessWidget {
  final String title;
  final String description;
  const NoodlButton({super.key, required this.title, required this.description});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.only(bottom: 12),
      child: Material(
        borderRadius: BorderRadius.all(Radius.circular(12.5)),
        color: Colors.white.withOpacity(0.08),
        child: InkWell(
        borderRadius: BorderRadius.all(Radius.circular(12.5)),
          onTap: () {
          },
          child: SizedBox(
            width: double.infinity,
            child: Stack(
              alignment: Alignment.center,
              children: [
                SizedBox(
                  width: double.infinity,
                  child: FittedBox(
                    fit: BoxFit.cover,
                    child: Text(
                      'noodl.',
                      style: TextStyle(
                        color: appColors.white.withOpacity(0.03),
                        fontFamily: 'MonolisaBB',
                        letterSpacing: -1,
                        height: 1
                      ),
                    ),
                  ),
                ),
                Align(
                  alignment: Alignment.topLeft,
                  child: Padding(
                    padding: EdgeInsets.all(12),
                    child: Column(
                      mainAxisSize: MainAxisSize.min,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // Text(
                        //   '#1',
                        //   style: TextStyle(
                        //     fontSize: 14,
                        //     fontFamily: 'NSansM',
                        //     color: appColors.white.withOpacity(0.5)
                        //   ),
                        // ),
                        // SizedBox(height: 5,),
                        Text(
                          title,
                          style: TextStyle(
                            color: appColors.white,
                            fontSize: 20,
                            fontFamily: 'NSansB'
                          ),
                        ),
                        SizedBox(height: 5,),
                        Text(
                          description,
                          style: TextStyle(
                            color: appColors.white,
                            fontSize: 14,
                            fontFamily: 'NSansL'
                          ),
                        ),
                        SizedBox(height: 5,),
                        Align(
                          alignment: Alignment.centerRight,
                          child: Icon(
                            CupertinoIcons.arrow_right,
                            color: appColors.white,
                          ),
                        )
                      ],
                    ),
                  ),
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}

--- lib\widgets\quiz\info_dialog.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/providers/quiz_page_provider.dart';
import 'package:frontend/widgets/quiz/quiz_submit_button.dart';
import 'package:provider/provider.dart';

void showInfoDialog(BuildContext context){
  Size size = MediaQuery.of(context).size;
  EdgeInsets dp = MediaQuery.of(context).padding;
  showGeneralDialog(
    context: context,
    pageBuilder: (context, animation, secondaryAnimation) {
      // KINDLY REMOVE THIS BITCCCHHH
      return Scaffold(
        backgroundColor: Colors.transparent,
        body: Center(
          child: Container(
            width: size.width - 24,
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              borderRadius: const BorderRadius.all(Radius.circular(18)),
              color: appColors.grey
            ),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                Container(
                  width: double.infinity,
                  padding: const EdgeInsets.all(12),
                  alignment: Alignment.center,
                  decoration: BoxDecoration(
                    color: appColors.primary.withOpacity(0.25),
                    // color: appColors.red.withOpacity(0.75),
                    borderRadius: const BorderRadius.all(Radius.circular(12.5))
                  ),
                  child: Text(
                    'You\'re Correct!',
                    // 'You\'re Wrong!',
                    style: TextStyle(
                      fontFamily: 'NSansM',
                      color: appColors.white,
                      fontSize: 20
                    ),
                  ),
                ),
                const SizedBox(height: 18,),
                Text(
                  "üí° Explanation:\nThe Reserve Bank of India (RBI) is the central bank of the country. It is responsible for issuing and regulating the Indian currency (‚Çπ), controlling inflation, managing monetary policy, and ensuring financial stability. It does not give loans to individuals or collect taxes‚Äîthat‚Äôs handled by commercial banks and the Income Tax Department, respectively.",
                  style: TextStyle(
                    color: appColors.white,
                    fontFamily: 'NSansM',
                    fontSize: 18
                  ),
                ),
                const SizedBox(height: 20,),
                Consumer<QuizPageProvider>(
                  builder: (context, provider, child) => 
                  Material(
                    color: appColors.white,
                    borderRadius: const BorderRadius.all(Radius.circular(12.5)),
                    child: InkWell(
                      onTap: (){
                        provider.goToNextQues();
                        Navigator.of(context).pop();
                      },
                      borderRadius: const BorderRadius.all(Radius.circular(12.5)),
                      child: Container(
                        width: double.infinity,
                        padding: const EdgeInsets.all(12),
                        alignment: Alignment.center,
                        child: Text(
                          'Continue',
                          style: TextStyle(
                            color: appColors.bgColor,
                            fontFamily: 'NSansM',
                            fontSize: 18
                          ),
                        ),
                      ),
                    ),
                  ),
                )
              ],  
            ),
          ),
        ),
      );
    },
  );
}

--- lib\widgets\quiz\quiz_answer_item.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class QuizAnswerItem extends StatelessWidget {
  final bool selected;
  final String text;
  final int uid;
  final VoidCallback onTap;
  const QuizAnswerItem({super.key, required this.selected, required this.text, required this.uid, required this.onTap});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.fromLTRB(12, 0, 12, 18),
      child: InkWell(
        onTap: onTap,
        borderRadius: const BorderRadius.all(Radius.circular(12.5)),
        child: AnimatedContainer(
          duration: const Duration(milliseconds: 200),
          alignment: Alignment.center,
          padding: const EdgeInsets.all(12),
          decoration: BoxDecoration(
            color: selected?appColors.primary:null,
            borderRadius: const BorderRadius.all(Radius.circular(12.5)),
            border: selected?null:Border.all(width: 1, color: appColors.white)
          ),
          child: Text(
            text,
            textAlign: TextAlign.center,
            style: TextStyle(
              color: selected? appColors.black : appColors.white,
              fontFamily: 'NSansM',
              fontSize: 18
            ),
          ),
        ),
      ),
    );
  }
}

--- lib\widgets\quiz\quiz_appbar.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/widgets/quiz/quiz_appbar_button.dart';

class QuizAppBar extends StatelessWidget {
  const QuizAppBar({super.key});

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    EdgeInsets dp = MediaQuery.of(context).padding;
    return Container(
      padding: EdgeInsets.fromLTRB(8, dp.top+8, 8, 16),
      height: dp.top + 70,
      // ignore: prefer_const_constructors
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: const [
          Opacity(opacity: 1,child: QuizAppbarButton()),
          SizedBox(width: 12,),
          Expanded(
            child: Padding(
              padding: EdgeInsets.symmetric(vertical: 8),
              child: FittedBox(
                child: Text(
                  'üíµ Finance',
                  style: TextStyle(
                    fontFamily: 'NSansB',
                    fontSize: 30,
                  ),
                ),
              ),
            ),
          ),
          // SizedBox(width: 20,),
          SizedBox(width: 12,),
          Opacity(opacity: 0,child: QuizAppbarButton()),
          // QuizAppbarButton(),

        ],
      ),
    );
  }
}



--- lib\widgets\quiz\quiz_appbar_button.dart ---

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class QuizAppbarButton extends StatelessWidget {
  const QuizAppbarButton({super.key});

  @override
  Widget build(BuildContext context) {
    return Material(
      color: appColors.secondary,
      borderRadius: const BorderRadius.all(Radius.circular(12.5)),
      child: InkWell(
        onTap: (){},
        borderRadius: const BorderRadius.all(Radius.circular(10)),
        child: Container(
          width: 45,
          height: 45,
          alignment: Alignment.center,
          child: Icon(
            CupertinoIcons.clear_thick,
            size: 24,
            color: appColors.white,
          ),
        ),
      ),
    );
  }
}

--- lib\widgets\quiz\quiz_options.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/providers/quiz_page_provider.dart';
import 'package:frontend/widgets/quiz/quiz_answer_item.dart';
import 'package:provider/provider.dart';

class QuizOptions extends StatelessWidget {
  const QuizOptions({super.key});

  @override
  Widget build(BuildContext context) {
    return Consumer<QuizPageProvider>(
      builder: (context, provider, child) => 
      Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          QuizAnswerItem(onTap: ()=>provider.changeSelectedOption(1),uid: 1,selected: provider.selectedOption==1, text: 'Universal Payment Integration',),
          QuizAnswerItem(onTap: ()=>provider.changeSelectedOption(2),uid: 2,selected: provider.selectedOption==2, text: 'Unified Payment Interface',),
          QuizAnswerItem(onTap: ()=>provider.changeSelectedOption(3),uid: 3,selected: provider.selectedOption==3, text: 'Unique Payment Identifier',),
          QuizAnswerItem(onTap: ()=>provider.changeSelectedOption(4),uid: 4,selected: provider.selectedOption==4, text: 'Unified Processing Infrastructure',),
        ],
      ),
    );
  }
}



--- lib\widgets\quiz\quiz_question.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class QuizQuestion extends StatelessWidget {
  final String text;
  const QuizQuestion({super.key, required this.text});

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.symmetric(horizontal: 8, vertical: 15),
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: appColors.primary.withOpacity(0.25),
        borderRadius: const BorderRadius.all(Radius.circular(12.5))
      ),
      child: Text(
        text,
        style: TextStyle(
          color: appColors.white,
          fontFamily: 'NSansM',
          fontSize: 20
        ),
      ),
    );
  }
}

--- lib\widgets\quiz\quiz_submit_button.dart ---

import 'package:flutter/material.dart';
import 'package:frontend/constants/colors.dart' as appColors;

class QuizSubmitButton extends StatelessWidget {
  final String text;
  final VoidCallback? onTap;
  final bool isActive;
  const QuizSubmitButton(this.text, {super.key, this.onTap, required this.isActive,});

  @override
  Widget build(BuildContext context) {
    EdgeInsets dp = MediaQuery.of(context).padding;
    return Padding(
      padding: EdgeInsets.fromLTRB(12, 0, 12, dp.bottom + 12),
      child: AnimatedOpacity(
        duration: const Duration(milliseconds: 200),
        opacity: isActive?1:0,
        child: Material(
          color: appColors.white,
          borderRadius: const BorderRadius.all(Radius.circular(12.5)),
          child: InkWell(
            onTap: isActive?onTap:null,
            borderRadius: const BorderRadius.all(Radius.circular(12.5)),
            child: Container(
              alignment: Alignment.center,
              padding: const EdgeInsets.all(12),
              child: Text(
                text,
                textAlign: TextAlign.center,
                style: TextStyle(
                  color: appColors.black,
                  fontFamily: 'NSansM',
                  fontSize: 18
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}