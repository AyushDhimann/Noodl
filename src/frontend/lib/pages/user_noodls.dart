import 'dart:convert';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:frontend/pages/home.dart';
import 'package:frontend/providers/metamask_provider.dart';
import 'package:frontend/test/test_data.dart' as testData;
import 'package:frontend/widgets/generate/logs_display.dart';
import 'package:frontend/providers/generate_page_provider.dart';
import 'package:frontend/services/services.dart';
import 'package:frontend/widgets/common/topbar.dart';
import 'package:frontend/constants/colors.dart' as appColors;
import 'package:frontend/widgets/generate/noodle_generator_widget.dart';
import 'package:frontend/widgets/generate/starting_generation.dart';
import 'package:frontend/widgets/home/empty_your_noodls.dart';
import 'package:frontend/widgets/home/noodl_button.dart';
import 'package:provider/provider.dart';

class UserNoodlsPage extends StatelessWidget {
  const UserNoodlsPage({super.key});

  @override
  Widget build(BuildContext context) {
    EdgeInsets dp = MediaQuery.of(context).padding;
    Size size = MediaQuery.of(context).size;
    return GestureDetector(
      onTap: ()=>FocusScope.of(context).unfocus(),
      child: Scaffold(
        backgroundColor: appColors.bgColor,
        body: Stack(
            children: [
              Padding(
                padding: EdgeInsetsGeometry.symmetric(horizontal: 12),
                child: SingleChildScrollView(
                  physics: BouncingScrollPhysics(),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      SizedBox(height: dp.top + 60+12,),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.start,
                        children: [
                          Icon(
                            CupertinoIcons.square_favorites_alt,
                            color: appColors.white,
                          ),
                          SizedBox(width: 10,),
                          Text(
                            'Your Noodls',
                            style: TextStyle(
                              fontFamily: 'NSansB',
                              fontSize: 22, 
                              color: appColors.white
                            ),
                          ),
                        ],
                      ),
                      SizedBox(height: 5,),
                      Text(
                        "Your learning paths - whether generated by us or curated from the Noodl community.",
                        style: TextStyle(
                          color: appColors.white.withOpacity(0.5),
                          fontFamily: 'NSansM',
                          fontSize: 12
                        ),
                      ),
                      SizedBox(height: 12,),
                      FutureBuilder(
                        future: APIservice.getUserNoodls(
                          // walletAdd: '0x718fafb76e1631f5945bf58104f3b81d9588819b'
                          walletAdd: Provider.of<MetaMaskProvider>(context, listen: false).walletAddress
                          ??"0x718fafb76e1631f5945bf58104f3b81d9588819b",
                          // remove this
                        ),
                        builder: (context, snapshot) {
                          return snapshot.hasData?
                            Column(
                              mainAxisSize: MainAxisSize.min,
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                ...snapshot.data.map((e)=>NoodlButton(data: e)),
                                // ShowAllNoodlsButton()
                              ],
                            ) : EmptyYourNoodls();
                        },
                      ),
                    ],
                  ),
                ),
              ),
              Topbar(
                leftIcon: CupertinoIcons.clear,
                // leftOnTap: () => Navigator.of(context).pushReplacement(MaterialPageRoute(builder: (context) => HomePage(),)),
                leftOnTap: () => Navigator.of(context).pop()
              )
            ],
          ),
        ),
    );
  }
}